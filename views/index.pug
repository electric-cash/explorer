extends layout

block headContent
	title Electric Cash Explorer
	
block content
	div(class='page-content')
		h1(class="page-title") #{coinConfig.siteTitle}

	if (getblockchaininfo == null)
		div(class="alert alert-warning")
			p(class="font-weight-bold") Unable to get basic blockchain data
			ul
				li If you just started your node, it may still be initializing.
				li If your node is already initialized, check your RPC connection info.
	else

		if (config.demoSite && session.hideHomepageBanner != "true")
			div(class="alert alert-primary alert-dismissible shadow-sm mb-4", role="alert")
				span
					strong #{coinConfig.siteTitle}
					span  is 
					a(href="https://github.com/bitcoinvault/explorer", target="_blank") open-source
					span  and easy to set up. It can communicate with your 
					a(href=coinConfig.nodeUrl, target="_blank") #{coinConfig.name} Full Node
					span  via RPC. See the 
					a(href="https://github.com/bitcoinvault/explorer", target="_blank") project description
					span  for a list of features and instructions for running.

				if (global.sourcecodeProjectMetadata)
					div.mt-2
						a(href="https://github.com/bitcoinvault/explorer", class="btn btn-primary mr-3 mb-1")
							i(class="fas fa-star mr-2")
							span(class="mr-2") Star 
							span(class="badge bg-white text-dark") #{global.sourcecodeProjectMetadata.stargazers_count}

						a(href="https://github.com/bitcoinvault/explorer/fork", class="btn btn-primary mr-3 mb-1")
							i(class="fas fa-code-branch mr-2")
							span(class="mr-2") Fork 
							span(class="badge bg-white text-dark") #{global.sourcecodeProjectMetadata.forks_count}
						
						if (!crawlerBot)
							button.btn.btn-primary(type="button", class="btn btn-primary mb-1", data-toggle="modal", data-target="#exampleModalCenter")
								i(class="fas fa-heart mr-2")
								span Donate via 
								span(class="font-weight-light") BTCPay	

				a(href="/changeSetting?name=hideHomepageBanner&value=true", class="close", aria-label="Close", style="text-decoration: none;")
					span(aria-hidden="true") &times;


		- var networkSummaryItemCount = 4;

		if (getblockchaininfo.size_on_disk)
			- networkSummaryItemCount++;

		if (global.exchangeRates)
			- networkSummaryItemCount++;

		if (txStats)
			- networkSummaryItemCount++;

		- var networkSummaryColumnClass = "col-md-4 col-lg-3 card-bottom-item";
		if (networkSummaryItemCount > 6)
			- networkSummaryColumnClass = "col-md-4 col-lg-3 card-bottom-item";
			
		div(class="card mb-4 shadow-sm")
			div(class="card-top")
				h3(class="card-top-title") Network Summary
				hr(class="hr")
			div(class="card-bottom")
				div(class="row")
					div(class=networkSummaryColumnClass)
						div(class="float-left icon-container")
							img(src="/img/icons/tachometer.svg")
						- var hashrateData = utils.formatLargeNumber(miningInfo.networkhashps, 3);
						
						span(class="font-weight-bold") Hashrate 

						p(class="lead")
							span #{hashrateData[0]} 
							span.border-dotted(title=`${hashrateData[1].abbreviation}H = ${hashrateData[1].name}-hash (x10^${hashrateData[1].exponent})`, data-toggle="tooltip") #{hashrateData[1].abbreviation}H/s

					if (txStats)
						div(class=networkSummaryColumnClass)
							div(class="float-left icon-container")
								img(src="/img/icons/total-transactions.svg")

							span(class="font-weight-bold") Total Transactions

							p(class="lead") #{txStats.totalTxCount.toLocaleString()}

					div(class=networkSummaryColumnClass)
						div(class="float-left icon-container")
							img(src="/img/icons/unlock.svg")

						span(class="font-weight-bold") Unconfirmed Transactions

						p(class="lead") #{mempoolInfo.size.toLocaleString()} tx 
							- var mempoolBytesData = utils.formatLargeNumber(mempoolInfo.usage, 2);
							small(class="text-muted font-weight-light") (#{mempoolBytesData[0]} #{mempoolBytesData[1].abbreviation}B)

					div(class=networkSummaryColumnClass)
						div(class="float-left icon-container")
							img(src="/img/icons/chainwork.svg")

						- var chainworkData = utils.formatLargeNumber(parseInt("0x" + getblockchaininfo.chainwork), 2);
						span.font-weight-bold.border-dotted(data-toggle="tooltip", title=("How many hashes were needed to create the current blockchain state")) Chainwork
						
						p(class="lead")
							span.mr-2.border-dotted(data-toggle="tooltip", title=getblockchaininfo.chainwork.replace(/^0+/, ''))
								span #{chainworkData[0]}
								span  x 10
								sup #{chainworkData[1].exponent}
								span  hashes
					
					div(class=networkSummaryColumnClass)
						div(class="float-left icon-container")
							img(src="/img/icons/difficulty.svg")

						- var difficultyData = utils.formatLargeNumber(getblockchaininfo.difficulty, 3);

						span.font-weight-bold.border-dotted(data-toggle="tooltip", title=("How hard it is to mine the next block, relatively to the genesis block")) Difficulty

						p(class="lead")
							span.mr-2.border-dotted(data-toggle="tooltip", title=parseFloat(getblockchaininfo.difficulty).toLocaleString())
								span #{difficultyData[0]}
								span  x 10
								sup #{difficultyData[1].exponent}

					if (getblockchaininfo.size_on_disk)
						div(class=networkSummaryColumnClass)
							div(class="float-left icon-container")
								img(src="/img/icons/blockchain-size.svg")
							span(class="font-weight-bold") Blockchain Size

							- var sizeData = utils.formatLargeNumber(getblockchaininfo.size_on_disk, 2);
							p(class="lead") #{sizeData[0]} #{sizeData[1].abbreviation}B
					
					if (global.totalWalletsNumber)
						div(class=networkSummaryColumnClass)
							div(class="float-left icon-container")
								img(src="/img/icons/wallet.svg")
							span(class="font-weight-bold") Number of BTCV wallets
							p(class="lead") #{global.totalWalletsNumber.toLocaleString()}

					if (global.txAvgVolume24h)
						div(class=networkSummaryColumnClass)
							div(class="float-left icon-container")
								img(src="/img/icons/avg-tx.svg")
							span(class="font-weight-bold") Avg Tx Volume (24h)
							p(class="lead") #{global.txAvgVolume24h.toLocaleString()} BTCV/TX

					if (global.totalCoinSupply)
						div(class=networkSummaryColumnClass)
							div(class="float-left icon-container")
								img(src="/img/icons/coins.svg")
							span(class="font-weight-bold") Coins In Circulation
							p(class="lead") #{Math.round(global.totalCoinSupply).toLocaleString()} BTCV
					
					if (global.totalCoinSupply && global.exchangeRates)
						div(class=networkSummaryColumnClass)
							div(class="float-left icon-container")
								img(src="/img/icons/market-cap.svg")
							span(class="font-weight-bold") Market Cap
							p(class="lead") $#{Math.round(global.exchangeRates['usd'] * global.totalCoinSupply).toLocaleString() }

					if (global.exchangeRates)
						div(class=networkSummaryColumnClass)
							div(class="float-left icon-container")
								img(src="/img/icons/usd.svg")

							span.font-weight-bold.border-dotted(data-toggle="tooltip", title=("Exchange-rate data from: " + coinConfig.exchangeRateDataUSD.jsonUrl)) Exchange Rate (USD)

							if (global.exchangeRates)
								p(class="lead") #{utils.formatExchangedCurrency(1.0, "usd")}
							else
								p(class="lead") -
						div(class=networkSummaryColumnClass)
							div(class="float-left icon-container")
								img(src="/img/icons/btc.svg")

							span.font-weight-bold.border-dotted(data-toggle="tooltip", title=("Exchange-rate data from: " + coinConfig.exchangeRateDataBTC.jsonUrl)) Exchange Rate (BTC)

							if (global.exchangeRates)
								p(class="lead") #{utils.formatExchangedCurrency(1.0, "btc")}
							else
								p(class="lead") -



		include includes/tools-card.pug
		
		if (latestBlocks)
			div(class="card mb-4 shadow-sm")
				div(class="card-top")
					div(class="row")
						div(class="col")
							h3(class="card-top-title") Latest Blocks
								if (getblockchaininfo.initialblockdownload)
									small  (#{(getblockchaininfo.headers - getblockchaininfo.blocks).toLocaleString()} behind)

						div(class="col")
							span(style="float: right;")
								a(href="/blocks")
									span(class="fw-500")  Browse Blocks

					hr(class="hr")

				div(class="card-bottom")

					- var blocks = latestBlocks;
					- var blockOffset = 0;

					include includes/blocks-list.pug


		if (txStats)
			div(class="card mb-4 shadow-sm")
				div(class="card-top")
					div(class="row")
						div(class="col")
							h3(class="card-top-title") Transaction Stats Summary

						div(class="col")
							span(style="float: right;")
								a(href="/tx-stats")
									span(class="fw-500")  Transaction Stats

					hr(class="hr")

				div(class="card-bottom")
					if (true)
						div(class="row")
							div(class="col-lg-6")
								div(class="table-responsive")
									table(class="table text-right mb-4 mb-lg-0 transaction-stats-table")
										thead
											tr
												th Period
												th Transactions
												th Transactions Per Sec
										tbody
											each item, index in chainTxStats
												tr(class="monospace")
													td #{chainTxStatsLabels[index]}
													td #{item.window_tx_count.toLocaleString()}
													td #{new Decimal(item.txrate).toDecimalPlaces(4)}


							div(class="col-lg-6")
								script var txRateDataDay = [];
								each item, index in txStats.txCountStats.txRates
									script txRateDataDay.push({x:#{item.x}, y:#{item.y}});

								- var graphData = {id:"graphRateDay", dataVar:"txRateDataDay", labels:txStats.txCountStats.txLabels, title:"Tx Rate, 24hr", xaxisTitle:"Block", xaxisStep:5, yaxisTitle:"Tx Per Sec"};
								include ./includes/line-graph.pug
											
